<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Admin Dashboard</title>
  <link rel="stylesheet" href="../styles/style.css"> <!-- Link to CSS -->
  <style>
    .filter-input {
      width: 100%;
      padding: 5px;
      margin-bottom: 5px;
      box-sizing: border-box;
    }
   
  </style>
</head>
<body>
  <header>
    <img src="/images/Headermgujpg.webp" alt="Logo" class="logo-image" />
    <h3 class="header">
      <% if (user && user.name) { %>
        <span>You are logged in as <%= user.name %></span>
      <% } %>
      <a href="/logout" class="right-link">Logout</a>
    </h3>
    <h1>All Students History</h1>
  </header>

  <table class="data-table">
    <thead>
      <tr>
        <th class="sortable" data-column="roll_number">Roll Number</th>
        <th class="sortable" data-column="room_no">Room No</th>
        <th class="sortable" data-column="feepaid">Fee Paid</th>
        <th class="sortable" data-column="feedue">Fee Due</th>
        <th class="sortable" data-column="month">Month</th>
        <th class="sortable" data-column="year">Year</th>
        <th class="sortable" data-column="monthlybill">Monthly Bill</th>
        <th class="sortable" data-column="scholarship">Scholarship</th>
        <% if (user && user.is_admin) { %>
          <th>Edit</th>
        <% } %>
      </tr>
      <tr>
        <th><input type="text" class="filter-input" placeholder="Filter Roll Number"></th>
        <th><input type="text" class="filter-input" placeholder="Filter Room No"></th>
        <th><input type="text" class="filter-input" placeholder="Filter Fee Paid"></th>
        <th><input type="text" class="filter-input" placeholder="Filter Fee Due"></th>
        <th><input type="text" class="filter-input" placeholder="Filter Month"></th>
        <th><input type="text" class="filter-input" placeholder="Filter Year"></th>
        <th><input type="text" class="filter-input" placeholder="Filter Monthly Bill"></th>
        <th><input type="text" class="filter-input" placeholder="Filter Scholarship"></th>
        <% if (user && user.is_admin) { %>
          <th></th>
        <% } %>
      </tr>
    </thead>
    <tbody id="data-body">
      <% if (!history || history.length === 0) { %>
        <tr>
          <td colspan="<%= user && user.is_admin ? 8 : 7 %>">No history found.</td>
        </tr>
      <% } else { %>
        <% history.forEach(item => { %>
          <tr>
            <td><%= item.roll_number %></td>
            <td><%= item.room_no %></td>
            <td><%= item.feepaid %></td>
            <td><%= item.feedue %></td>
            <td><%= item.month %></td>
            <td><%= item.year %></td>
            <td><%= item.monthlybill %></td>
            <td><%= item.scholarship %></td>
            <% if (user && user.is_admin) { %>
              <td>
                <a href="/updatestudenthistory/<%= item.roll_number %>?month=<%= item.month %>&year=<%= item.year %>">Edit</a>
              </td>
            <% } %>
          </tr>
        <% }) %>
      <% } %>
    </tbody>
  </table>

  <div class="center-links">
    <a href="/dashboard">Go to Dashboard</a>
  </div>

  <script>
    // Sorting functionality
    document.querySelectorAll('.sortable').forEach(header => {
    header.addEventListener('click', () => {
    const column = header.dataset.column;
    const isNumeric = ['feepaid', 'feedue', 'monthlybill', 'scholarship', 'year'].includes(column);
    const isMonth = column === 'month';
    const rows = Array.from(document.querySelectorAll('#data-body tr')).filter(row => row.style.display !== 'none');
    
    // Month order mapping
    const monthOrder = [
    'january', 'february', 'march', 'april', 'may', 'june',
    'july', 'august', 'september', 'october', 'november', 'december'
    ];
    
    const sortedRows = rows.sort((a, b) => {
    const aCell = a.querySelector(`td:nth-child(${header.cellIndex + 1})`).textContent.trim().toLowerCase();
    const bCell = b.querySelector(`td:nth-child(${header.cellIndex + 1})`).textContent.trim().toLowerCase();
    
    if (isNumeric) {
    return parseFloat(aCell) - parseFloat(bCell);
    } else if (isMonth) {
    // Compare using month order
    return monthOrder.indexOf(aCell) - monthOrder.indexOf(bCell);
    } else {
    return aCell.localeCompare(bCell, undefined, { numeric: true });
    }
    });
    
    // Toggle sort direction
    if (header.classList.contains('asc')) {
    sortedRows.reverse();
    header.classList.remove('asc');
    header.classList.add('desc');
    } else {
    header.classList.remove('desc');
    header.classList.add('asc');
    }
    
    document.querySelector('#data-body').innerHTML = '';
    document.querySelector('#data-body').append(...sortedRows);
    });
    });
    
    // Filtering functionality
    document.querySelectorAll('.filter-input').forEach((input, index) => {
    input.addEventListener('input', () => {
      const filterText = input.value.trim().toLowerCase();
      const rows = document.querySelectorAll('#data-body tr');

      // Split the input into multiple filter values (by commas)
      const filterValues = filterText.split(',').map(val => val.trim()).filter(val => val !== '');

      rows.forEach(row => {
        const cell = row.querySelector(`td:nth-child(${index + 1})`);
        if (!cell) {
          row.style.display = 'none';
          return;
        }

        const cellText = cell.textContent.trim().toLowerCase();

        if (filterValues.length === 0) {
          row.style.display = '';
        } else {
        const header = document.querySelectorAll('.sortable')[index];
        
        // Apply exact match for  all columns
        if (cellText === filterText) {
          row.style.display = '';
        } else {
          row.style.display = 'none';
        }
      }
      });
    });
  });
    </script>
    
  

</body>
</html>
